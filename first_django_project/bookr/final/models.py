# Generated by Django 4.1.7 on 2023-03-01 17:01
from django.contrib import auth
from django.db import migrations, models


class Publisher(models.Model):

    """A company that publishes books."""
    name = models.CharField(max_length=50,
                            help_text="The name of the Publisher.")
    website = models.URLField(help_text="The Publisher's website.")

    email = models.EmailField(help_text="The Publisher's email address.")

    def __str__(self):
        return self.name


class Book(models.Model):
    title = models.CharField(max_length=70, help_text="The title of the book.")
    publication_date = models.DateField(verbose_name="Date the book was published.")
    isbn = models.CharField(max_length=20, verbose_name="ISBN number of the book.")
    publisher = models.ForeignKey(Publisher, on_delete=models.CASCADE)
    contributors = models.ManyToManyField('Contributor', through="BookContributor")
    cover = models.ImageField(null=True, blank=True, upload_to="book_covers/")
    sample = models.FileField(null=True, blank=True, upload_to="book_samples/")

    def __str__(self):
        return "{} ({})".format(self.title, self.isbn)


class Contributor(models.Model):
    first_names = models.CharField(max_length=50,
                                   help_text="The contributor's first name or names.")
    last_names = models.CharField(max_length=50,
                                  help_text="The contributor's last name or names.")

    email = models.EmailField(help_text="The contact email for the contributor.")

    def initialled_name(self):
        initials = self.last_names + ", " + ''.join(name[0] for name in self.first_names.split(' '))
        return initials

    def __str__(self):
        return self.initialled_name()


class BookContributor(models.Model):
    class ContributionRole(models.TextChoices):
        AUTHOR = "AUTHOR", "Author"
        CO_AUTHOR = "CO_AUTHOR", "Co-Author"
        EDITOR = "EDITOR", "Editor"

    book = models.ForeignKey(Book,
                             on_delete=models.CASCADE)
    contributor = models.ForeignKey(Contributor,
                                    on_delete=models.CASCADE)
    role = models.CharField(verbose_name="The role this contributor had in the book.",
                            choices=ContributionRole.choices,
                            max_length=20)


class Review(models.Model):
    content = models.TextField(help_text="The Review text.")
    rating = models.IntegerField(help_text="The rating the reviewer has given.")
    date_created = models.TextField(help_text="The date and time the review was created.")
    date_edited = models.TextField(null=True,
                                   help_text="The date and time the review was last edited.")
    creator = models.TextField(help_text='Author of rating')
    book = models.ForeignKey(Book,
                             on_delete=models.CASCADE,
                             help_text="The Book that this review is for.")


class Reservation(models.Model):
    Username = models.CharField(help_text="Username", max_length = 40)
    Name = models.CharField(help_text = "Username's name", max_length = 40)
    Email = models.CharField(help_text = "Enmail-address", max_length = 50)
    Phone_num = models.CharField(help_text="Phone number", max_length = 50)
    Number= models.IntegerField(help_text = "Number of guests")
    Date= models.DateField(help_text = "Date of reservation")
    Time = models.CharField(help_text = "Time", max_length = 30)
    Message = models.TextField(max_length = 200)

    def __str__(self):
        return self.Name